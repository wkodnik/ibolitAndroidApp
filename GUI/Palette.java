/*
 * Palette.java
 *
 * 
 */
package GUI;

import Objects.Unit;
import buttonlist.jButtonList.BLEvent;
import buttonlist.jButtonList.BLEventListener;

/**
 *
 * @author  sasa
 */
public class Palette extends javax.swing.JFrame {

    /** Creates new form Palette */
    public Palette() {
        initComponents();
        jButtonList1.setSelectedIndex(0);
        setTeamList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        terrainList = new buttonlist.jButtonList();
        terrainList.initComponents(mapedit.Constants.tileList);
        jPanel2 = new javax.swing.JPanel();
        elevationList = new buttonlist.jButtonList();
        this.elevationList.initComponents(mapedit.Constants.elevationList);
        this.elevationList.setReSizeImg(true);
        jScrollPane1 = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        teamList = new buttonlist.jButtonList();
        teamList.addBLEventListener(new BLEventListener() {
            public void BLEventOccurred(BLEvent evt) {
                teamListBLEvent();
            }
        });
        unitList = new buttonlist.jButtonList();
        unitList.initComponents(mapedit.Constants.unitList);
        unitList.setReSizeImg(true);
        jButtonList1 = new buttonlist.jButtonList();
        jButtonList1.initComponents(mapedit.Constants.paletteSizes);
        jButtonList1.setReSizeImg(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Palette");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(terrainList, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(terrainList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Terrain", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(elevationList, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(elevationList, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Elevation", jPanel2);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setRightComponent(teamList);
        jSplitPane1.setLeftComponent(unitList);

        jScrollPane1.setViewportView(jSplitPane1);

        jTabbedPane1.addTab("Units", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonList1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonList1, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setTeamList() {
        try {
            Objects.Team[] tml = new Objects.Team[mapedit.Constants.getCurrentMap().getMapTeams().size()];
            teamList.initComponents(mapedit.Constants.getCurrentMap().getMapTeams().toArray(tml));
            if (tml.length > 0) {
                teamList.setSelectedIndex(0);
            }
        } catch (NullPointerException e) {
        }
    }

    public Objects.Team getTeam() {
        return (Objects.Team) teamList.getItem();
    }

private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
    mapedit.Constants.setTopPalette(this);
}//GEN-LAST:event_formWindowGainedFocus

private void jTabbedPane1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyTyped
    if (evt.getKeyChar() == ' ') {
        if (getPalleteEditor().isSelected())
            getPalleteEditor().unselect();
        else
            getPalleteEditor().select();
    } else if (evt.getKeyChar() == 'n' && evt.isAltDown()) {
        selectNext();
    } else if (evt.getKeyChar() == 'p' && evt.isAltDown()) {
        selectPrevious();
    }
}//GEN-LAST:event_jTabbedPane1KeyTyped
    private void teamListBLEvent() {
        refreshUnits();
    }

    public void selectNext() {
        if (getPalleteEditor().isSelected())
            getPalleteEditor().selectNext();
    }

    public void selectPrevious() {
        if (getPalleteEditor().isSelected())
            getPalleteEditor().selectPrevious();
    }

    public int getPaletteSize() {
        return (Integer) jButtonList1.getItem();
    }

    public int getSelectedIndex() {
        return this.jTabbedPane1.getSelectedIndex();
    }

    public buttonlist.jButtonList getPalleteEditor() {
        int idx = getSelectedIndex();
        if (idx == TERRAIN)
            return this.terrainList;
        else if (idx == ELEVATION)
            return this.elevationList;
        else if (idx == UNIT) {
            return this.unitList;
        }
        return null;
    }

    public boolean isSelected() {
        return getPalleteEditor().isSelected();
    }

    public static void refreshTeams() {
        for (Palette palet : mapedit.Constants.palettes) {
            palet.setTeamList();
        }
    }

    public void refreshUnits() {
        for (int i = 0; i < mapedit.Constants.unitList.length; i++) {
            mapedit.Constants.unitList[i] = new Objects.Unit(Objects.Unit.Type.values()[i], getTeam());
        }
        unitList.initComponents(mapedit.Constants.unitList);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        mapedit.Constants.init();
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Palette().setVisible(true);
//            }
//        });
    }
    public static final int TERRAIN = 0, ELEVATION = 1, UNIT = 2;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private buttonlist.jButtonList elevationList;
    private buttonlist.jButtonList jButtonList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private buttonlist.jButtonList teamList;
    private buttonlist.jButtonList terrainList;
    private buttonlist.jButtonList unitList;
    // End of variables declaration//GEN-END:variables
}
